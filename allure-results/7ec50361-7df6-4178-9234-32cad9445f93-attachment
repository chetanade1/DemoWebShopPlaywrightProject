# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Invalid Register Page Test
- Location: D:\DemoWebShopProject\tests\RegisterPageTest.spec.js:23:5

# Error details

```
Error: locator.innerText: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('//span[@for=\'FirstName\']')

    at RegisterPage.getFirstNameErrorValidation (D:\DemoWebShopProject\pages\RegisterPage.js:53:75)
    at D:\DemoWebShopProject\tests\RegisterPageTest.spec.js:33:15
```

# Page snapshot

```yaml
- link "Tricentis Demo Web Shop":
  - img "Tricentis Demo Web Shop"
- list:
  - listitem:
    - link "Register"
  - listitem:
    - link "Log in"
  - listitem:
    - link "Shopping cart (0)"
  - listitem:
    - link "Wishlist (0)"
- status
- textbox: Search store
- button "Search"
- list:
  - listitem:
    - link "Books"
  - listitem:
    - link "Computers"
  - listitem:
    - link "Electronics"
  - listitem:
    - link "Apparel & Shoes"
  - listitem:
    - link "Digital downloads"
  - listitem:
    - link "Jewelry"
  - listitem:
    - link "Gift Cards"
- strong: Categories
- list:
  - listitem:
    - link "Books"
  - listitem:
    - link "Computers"
  - listitem:
    - link "Electronics"
  - listitem:
    - link "Apparel & Shoes"
  - listitem:
    - link "Digital downloads"
  - listitem:
    - link "Jewelry"
  - listitem:
    - link "Gift Cards"
- strong: Manufacturers
- list:
  - listitem:
    - link "Tricentis"
- strong: Newsletter
- text: "Sign up for our newsletter:"
- textbox
- button "Subscribe"
- heading "Register" [level=1]
- strong: Your Personal Details
- text: "Gender:"
- radio "Male"
- text: Male
- radio "Female"
- text: "Female First name:"
- textbox "First name:"
- text: "* Last name:"
- textbox "Last name:"
- text: "* Email:"
- textbox "Email:"
- text: "*"
- strong: Your Password
- text: "Password:"
- textbox "Password:"
- text: "* Confirm password:"
- textbox "Confirm password:"
- text: "*"
- button "Register"
- heading "Information" [level=3]
- list:
  - listitem:
    - link "Sitemap"
  - listitem:
    - link "Shipping & Returns"
  - listitem:
    - link "Privacy Notice"
  - listitem:
    - link "Conditions of Use"
  - listitem:
    - link "About us"
  - listitem:
    - link "Contact us"
- heading "Customer service" [level=3]
- list:
  - listitem:
    - link "Search"
  - listitem:
    - link "News"
  - listitem:
    - link "Blog"
  - listitem:
    - link "Recently viewed products"
  - listitem:
    - link "Compare products list"
  - listitem:
    - link "New products"
- heading "My account" [level=3]
- list:
  - listitem:
    - link "My account"
  - listitem:
    - link "Orders"
  - listitem:
    - link "Addresses"
  - listitem:
    - link "Shopping cart"
  - listitem:
    - link "Wishlist"
- heading "Follow us" [level=3]
- list:
  - listitem:
    - link "Facebook"
  - listitem:
    - link "Twitter"
  - listitem:
    - link "RSS"
  - listitem:
    - link "YouTube"
  - listitem:
    - link "Google+"
- text: Powered by
- link "nopCommerce"
- text: Copyright Â© 2025 Tricentis Demo Web Shop. All rights reserved.
```

# Test source

```ts
   1 | exports.RegisterPage = class RegisterPage 
   2 | {
   3 |     constructor(page) 
   4 |     {
   5 |         this.page = page;
   6 |         this.registerButton = "//a[contains(text(),'Register')]"
   7 |         this.malegen = "#gender-male";
   8 |         this.femalegen = "#gender-female";
   9 |         this.firstNameInput = "#FirstName"
   10 |         this.firstNameError = "//span[@for='FirstName']";
   11 |         this.lastNameInput = "#LastName"
   12 |         this.lastNameError = "//span[@for='LastName']";
   13 |         this.emailInput = "#Email"
   14 |         this.emailError = "//span[@for='Email']";
   15 |         this.telephoneInput = "#telephone"
   16 |         this.passwordInput = "#Password"
   17 |         this.passwordError = "//span[@for='Password']";
   18 |         this.confirmPasswordInput = "#ConfirmPassword"
   19 |         this.confirmPasswordError = "//span[@for='ConfirmPassword']";
   20 |         this.register = "#register-button"
   21 |         this.subscribeRadioButton = "//label[contains(text(),'Yes')"
   22 |         this.privacyPolicyCheckbox = "//label[contains(text(),'I have read and agree to the Privacy Policy')]"
   23 |         this.continueButton = "//input[@value='Continue']"
   24 |         this.successMessage = "//h1[contains(text(),'Your Account Has Been Created!')]"
   25 |
   26 |     }
   27 |
   28 |     async clickOnRegisterButton() 
   29 |     {
   30 |         await this.page.waitForSelector(this.registerButton, { state: 'visible' });
   31 |         await this.page.locator(this.registerButton).click();
   32 |         await this.page.waitForTimeout(2000);
   33 |         console.log("Register button clicked")
   34 |     }
   35 |
   36 |     async clickOnGenderMaleButton()
   37 |     {
   38 |         await this.page.locator(this.malegen).click();
   39 |         await this.page.waitForTimeout(2000);
   40 |         console.log("gender clicked")
   41 |     }
   42 |
   43 |     
   44 |     async fillFirstName(FirstName) 
   45 |     {
   46 |         await this.page.locator(this.firstNameInput).fill(FirstName);
   47 |         await this.page.waitForTimeout(2000);
   48 |         console.log("First name filled")
   49 |     }
   50 |
   51 |     async getFirstNameErrorValidation()
   52 |     {
>  53 |         const errorMessage = await this.page.locator(this.firstNameError).innerText();
      |                                                                           ^ Error: locator.innerText: Test timeout of 30000ms exceeded.
   54 |         console.log("First name error message is: " + errorMessage);
   55 |         return errorMessage;
   56 |     }
   57 |
   58 |     async fillLastName(Lastname) 
   59 |     {
   60 |         await this.page.locator(this.lastNameInput).fill(Lastname);
   61 |         await this.page.waitForTimeout(2000);
   62 |         console.log("Last name filled")
   63 |     }
   64 |
   65 |     async getLastNameErrorValidation()
   66 |     {
   67 |         const errorMessage = await this.page.locator(this.lastNameError).innerText();
   68 |         console.log("Last name error message is: " + errorMessage);
   69 |         return errorMessage;
   70 |     }
   71 |
   72 |
   73 |     async fillEmail(email) 
   74 |     {
   75 |         await this.page.locator(this.emailInput).fill(email);
   76 |         await this.page.waitForTimeout(2000);
   77 |         console.log("Email filled")
   78 |     }
   79 |
   80 |     async getEmailErrorValidation()
   81 |     {
   82 |         const errorMessage = await this.page.locator(this.emailError).innerText();
   83 |         console.log("Email error message is: " + errorMessage);
   84 |         return errorMessage;
   85 |     }
   86 |
   87 |     
   88 |     async fillTelephone() 
   89 |     {
   90 |         await this.page.locator(this.telephoneInput).fill("1234567890");
   91 |         await this.page.waitForTimeout(2000);
   92 |         console.log("Telephone filled")
   93 |     }
   94 |
   95 |     async fillPassword(password) 
   96 |     {
   97 |         await this.page.locator(this.passwordInput).fill(password);
   98 |         //await this.page.waitForTimeout(2000);
   99 |         console.log("Password filled")
  100 |     }
  101 |
  102 |     async getPasswordErrorValidation()
  103 |     {
  104 |         const errorMessage = await this.page.locator(this.passwordError).innerText();
  105 |         console.log("Password error message is: " + errorMessage);
  106 |         return errorMessage;
  107 |     }
  108 |
  109 |
  110 |     async fillConfirmPassword(confiPassword) 
  111 |     {
  112 |         await this.page.locator(this.confirmPasswordInput).fill(confiPassword);
  113 |         await this.page.waitForTimeout(2000);
  114 |         console.log("Confirm Password filled")
  115 |     }
  116 |
  117 |     async getConfirmPasswordErrorValidation()
  118 |     {
  119 |         const errorMessage = await this.page.locator(this.confirmPasswordError).innerText();
  120 |         console.log("Confirm Password error message is: " + errorMessage);
  121 |         return errorMessage;
  122 |     }
  123 |
  124 |     async clickOnRegButton()
  125 |     {
  126 |         await this.page.locator(this.register).click();
  127 |         await this.page.waitForTimeout(2000);
  128 |         console.log("Register button clicked")
  129 |     }
  130 |
  131 |
  132 |
  133 | }
```