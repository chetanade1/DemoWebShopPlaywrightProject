# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: UI components test
- Location: D:\DemoWebShopProject\tests\UIcomponents.spec.js:4:5

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)

Locator: locator('.footer-disclaimer')
- Expected string  - 1
+ Received string  + 3

- © 2023 Tricentis GmbH. All rights reserved.
+
+         Copyright © 2025 Tricentis Demo Web Shop. All rights reserved.
+     
Call log:
  - expect.toHaveText with timeout 5000ms
  - waiting for locator('.footer-disclaimer')
    9 × locator resolved to <div class="footer-disclaimer">↵        Copyright © 2025 Tricentis Demo Web Shop…</div>
      - unexpected value "
        Copyright © 2025 Tricentis Demo Web Shop. All rights reserved.
    "

    at UIcomponents.getFooterText (D:\DemoWebShopProject\pages\UIcomponents.js:365:34)
    at D:\DemoWebShopProject\tests\UIcomponents.spec.js:42:5
```

# Page snapshot

```yaml
- link "Tricentis Demo Web Shop":
  - img "Tricentis Demo Web Shop"
- list:
  - listitem:
    - link "Register"
  - listitem:
    - link "Log in"
  - listitem:
    - link "Shopping cart (0)"
  - listitem:
    - link "Wishlist (0)"
- status
- textbox: Search store
- button "Search"
- list:
  - listitem:
    - link "Books"
  - listitem:
    - link "Computers"
  - listitem:
    - link "Electronics"
  - listitem:
    - link "Apparel & Shoes"
  - listitem:
    - link "Digital downloads"
  - listitem:
    - link "Jewelry"
  - listitem:
    - link "Gift Cards"
- strong: Categories
- list:
  - listitem:
    - link "Books"
  - listitem:
    - link "Computers"
  - listitem:
    - link "Electronics"
  - listitem:
    - link "Apparel & Shoes"
  - listitem:
    - link "Digital downloads"
  - listitem:
    - link "Jewelry"
  - listitem:
    - link "Gift Cards"
- strong: Manufacturers
- list:
  - listitem:
    - link "Tricentis"
- strong: Popular tags
- list:
  - listitem:
    - link "apparel"
  - listitem:
    - link "awesome"
  - listitem:
    - link "book"
  - listitem:
    - link "camera"
  - listitem:
    - link "cell"
  - listitem:
    - link "compact"
  - listitem:
    - link "computer"
  - listitem:
    - link "cool"
  - listitem:
    - link "digital"
  - listitem:
    - link "jeans"
  - listitem:
    - link "jewelry"
  - listitem:
    - link "nice"
  - listitem:
    - link "shirt"
  - listitem:
    - link "shoes"
  - listitem:
    - link "TCP"
- link "View all"
- strong: Newsletter
- text: Thank you for signing up! A verification email has been sent. We appreciate your interest.
- strong: Community poll
- strong: Do you like nopCommerce?
- list:
  - listitem:
    - radio "Excellent"
    - text: Excellent
  - listitem:
    - radio "Good"
    - text: Good
  - listitem:
    - radio "Poor"
    - text: Poor
  - listitem:
    - radio "Very bad"
    - text: Very bad
- button "Vote"
- link
- img
- text: Tricentis Academy Prev Next
- img
- img
- img
- img
- img
- img
- img
- img
- img
- img
- img
- img
- img
- img
- img
- text: 1 2
- heading "Welcome to our store" [level=2]
- paragraph: Welcome to the new Tricentis store!
- paragraph: Feel free to shop around and explore everything.
- strong: Featured products
- link "Picture of $25 Virtual Gift Card":
  - img "Picture of $25 Virtual Gift Card"
- heading "$25 Virtual Gift Card" [level=2]:
  - link "$25 Virtual Gift Card"
- text: "25.00"
- button "Add to cart"
- link "Picture of 14.1-inch Laptop":
  - img "Picture of 14.1-inch Laptop"
- heading "14.1-inch Laptop" [level=2]:
  - link "14.1-inch Laptop"
- text: "1590.00"
- button "Add to cart"
- link "Picture of Build your own cheap computer":
  - img "Picture of Build your own cheap computer"
- heading "Build your own cheap computer" [level=2]:
  - link "Build your own cheap computer"
- text: "800.00"
- button "Add to cart"
- link "Picture of Build your own computer":
  - img "Picture of Build your own computer"
- heading "Build your own computer" [level=2]:
  - link "Build your own computer"
- text: "1200.00"
- button "Add to cart"
- link "Picture of Build your own expensive computer":
  - img "Picture of Build your own expensive computer"
- heading "Build your own expensive computer" [level=2]:
  - link "Build your own expensive computer"
- text: "1800.00"
- button "Add to cart"
- link "Picture of Simple Computer":
  - img "Picture of Simple Computer"
- heading "Simple Computer" [level=2]:
  - link "Simple Computer"
- text: "800.00"
- button "Add to cart"
- heading "Information" [level=3]
- list:
  - listitem:
    - link "Sitemap"
  - listitem:
    - link "Shipping & Returns"
  - listitem:
    - link "Privacy Notice"
  - listitem:
    - link "Conditions of Use"
  - listitem:
    - link "About us"
  - listitem:
    - link "Contact us"
- heading "Customer service" [level=3]
- list:
  - listitem:
    - link "Search"
  - listitem:
    - link "News"
  - listitem:
    - link "Blog"
  - listitem:
    - link "Recently viewed products"
  - listitem:
    - link "Compare products list"
  - listitem:
    - link "New products"
- heading "My account" [level=3]
- list:
  - listitem:
    - link "My account"
  - listitem:
    - link "Orders"
  - listitem:
    - link "Addresses"
  - listitem:
    - link "Shopping cart"
  - listitem:
    - link "Wishlist"
- heading "Follow us" [level=3]
- list:
  - listitem:
    - link "Facebook"
  - listitem:
    - link "Twitter"
  - listitem:
    - link "RSS"
  - listitem:
    - link "YouTube"
  - listitem:
    - link "Google+"
- text: Powered by
- link "nopCommerce"
- text: Copyright © 2025 Tricentis Demo Web Shop. All rights reserved.
```

# Test source

```ts
  265 |         const WelcomeText = await this.page.locator(this.WelcomeText);
  266 |         await expect(WelcomeText).toBeVisible();
  267 |         console.log("Welcome Text is visible");
  268 |     }
  269 |
  270 |     async getFeaturedProductsText()
  271 |     {
  272 |         await this.page.waitForSelector(this.FeaturedProductsText);
  273 |         const FeaturedProductsText = await this.page.locator(this.FeaturedProductsText);
  274 |         await expect(FeaturedProductsText).toBeVisible();
  275 |         console.log("Featured Products Text is visible");
  276 |     }
  277 |
  278 |     async getFeaturedProductsList()
  279 |     {
  280 |         await this.page.waitForSelector(this.FeaturedProductsList);
  281 |         const FeaturedProductsList = await this.page.locator(this.FeaturedProductsList);
  282 |         await expect(FeaturedProductsList).toHaveCount(6);
  283 |         console.log("Total Featured Products List: ", await FeaturedProductsList.count());
  284 |         console.log("Total Featured Products List: ", await FeaturedProductsList.allTextContents());
  285 |         //await expect(FeaturedProductsList).toBeVisible();
  286 |         console.log("Featured Products List is visible");
  287 |     }
  288 |
  289 |     async getInfoText()
  290 |     {
  291 |         await this.page.waitForSelector(this.infoText);
  292 |         const infoText = await this.page.locator(this.infoText);
  293 |         await expect(infoText).toBeVisible();
  294 |         console.log("Info Text is visible");
  295 |     }
  296 |
  297 |     async getInfoList()
  298 |     {
  299 |         await this.page.waitForSelector(this.infoList);
  300 |         const infoList = await this.page.locator(this.infoList);
  301 |         await expect(infoList).toHaveCount(6);
  302 |         console.log("Total Info List: ", await infoList.count());
  303 |         console.log("Total Info List: ", await infoList.allTextContents());
  304 |         console.log("Info List is visible");
  305 |     }
  306 |
  307 |     async getCustomerServiceText()
  308 |     {
  309 |         await this.page.waitForSelector(this.infoText);
  310 |         const cust_serviceText = await this.page.locator(this.cust_serviceText);
  311 |         await expect(cust_serviceText).toBeVisible();
  312 |         console.log("Customer service Text is visible");
  313 |     }
  314 |
  315 |     async getCustomerServiceList()
  316 |     {
  317 |         await this.page.waitForSelector(this.cust_serviceList);
  318 |         const cust_serviceList = await this.page.locator(this.cust_serviceList);
  319 |         await expect(cust_serviceList).toHaveCount(6);
  320 |         console.log("Total Customer Service List: ", await cust_serviceList.count());
  321 |         console.log("Total Customer Service List: ", await cust_serviceList.allTextContents());
  322 |         console.log("Info List is visible");
  323 |     }
  324 |
  325 |     async getMyAccountText()
  326 |     {
  327 |         await this.page.waitForSelector(this.my_accountText);
  328 |         const my_accountText = await this.page.locator(this.my_accountText);
  329 |         await expect(my_accountText).toBeVisible();
  330 |         console.log("Customer service Text is visible");
  331 |     }
  332 |
  333 |     async getMyAccountList()
  334 |     {
  335 |         await this.page.waitForSelector(this.my_accountList);
  336 |         const my_accountList = await this.page.locator(this.cust_serviceList);
  337 |         await expect(my_accountList).toHaveCount(6);
  338 |         console.log("Total Customer Service List: ", await my_accountList.count());
  339 |         console.log("Total Customer Service List: ", await my_accountList.allTextContents());
  340 |         console.log("my account list is visible");
  341 |     }
  342 |
  343 |     async getFollowUsText()
  344 |     {
  345 |         await this.page.waitForSelector(this.follow_usText);
  346 |         const follow_usText = await this.page.locator(this.my_accountText);
  347 |         await expect(follow_usText).toBeVisible();
  348 |         console.log("Follow List Text is visible");
  349 |     }
  350 |
  351 |     async getFollowUsList()
  352 |     {
  353 |         await this.page.waitForSelector(this.follow_usList);
  354 |         const follow_usList = this.page.locator(this.follow_usList); 
  355 |
  356 |         console.log("Total Follow Us List Items: ", await follow_usList.count());
  357 |         console.log("Follow Us List Texts: ", await follow_usList.allTextContents());
  358 |         console.log("My Follow List is visible");
  359 |     }
  360 |
  361 |     async getFooterText()
  362 |     {
  363 |         await this.page.waitForSelector(this.footerText);
  364 |         const footerText = await this.page.locator(this.footerText);
> 365 |         await expect(footerText).toHaveText("© 2023 Tricentis GmbH. All rights reserved.");
      |                                  ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)
  366 |         console.log("Footer Text: ", await footerText.allTextContents());
  367 |         await expect(footerText).toBeVisible();
  368 |         console.log("Footer Text is visible");
  369 |     }
  370 |
  371 |
  372 |
  373 |
  374 | }
```