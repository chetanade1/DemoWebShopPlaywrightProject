# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Invalid Register Page Test
- Location: D:\DemoWebShopProject\tests\RegisterPageTest.spec.js:23:6

# Error details

```
Error: locator.textContent: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('//span[@class=\'field-validation-error\' and @data-valmsg-for=\'ConfirmPassword\']')

    at RegisterPage.getConfirmPasswordErrorValidation (D:\DemoWebShopProject\pages\RegisterPage.js:121:64)
    at D:\DemoWebShopProject\tests\RegisterPageTest.spec.js:37:5
```

# Page snapshot

```yaml
- link "Tricentis Demo Web Shop":
  - img "Tricentis Demo Web Shop"
- list:
  - listitem:
    - link "Register"
  - listitem:
    - link "Log in"
  - listitem:
    - link "Shopping cart (0)"
  - listitem:
    - link "Wishlist (0)"
- status
- textbox: Search store
- button "Search"
- list:
  - listitem:
    - link "Books"
  - listitem:
    - link "Computers"
  - listitem:
    - link "Electronics"
  - listitem:
    - link "Apparel & Shoes"
  - listitem:
    - link "Digital downloads"
  - listitem:
    - link "Jewelry"
  - listitem:
    - link "Gift Cards"
- strong: Categories
- list:
  - listitem:
    - link "Books"
  - listitem:
    - link "Computers"
  - listitem:
    - link "Electronics"
  - listitem:
    - link "Apparel & Shoes"
  - listitem:
    - link "Digital downloads"
  - listitem:
    - link "Jewelry"
  - listitem:
    - link "Gift Cards"
- strong: Manufacturers
- list:
  - listitem:
    - link "Tricentis"
- strong: Newsletter
- text: "Sign up for our newsletter:"
- textbox
- button "Subscribe"
- heading "Register" [level=1]
- strong: Your Personal Details
- text: "Gender:"
- radio "Male"
- text: Male
- radio "Female"
- text: "Female First name:"
- textbox "First name:"
- text: "* Last name:"
- textbox "Last name:"
- text: "* Email:"
- textbox "Email:"
- text: "*"
- strong: Your Password
- text: "Password:"
- textbox "Password:"
- text: "* Confirm password:"
- textbox "Confirm password:"
- text: "*"
- button "Register"
- heading "Information" [level=3]
- list:
  - listitem:
    - link "Sitemap"
  - listitem:
    - link "Shipping & Returns"
  - listitem:
    - link "Privacy Notice"
  - listitem:
    - link "Conditions of Use"
  - listitem:
    - link "About us"
  - listitem:
    - link "Contact us"
- heading "Customer service" [level=3]
- list:
  - listitem:
    - link "Search"
  - listitem:
    - link "News"
  - listitem:
    - link "Blog"
  - listitem:
    - link "Recently viewed products"
  - listitem:
    - link "Compare products list"
  - listitem:
    - link "New products"
- heading "My account" [level=3]
- list:
  - listitem:
    - link "My account"
  - listitem:
    - link "Orders"
  - listitem:
    - link "Addresses"
  - listitem:
    - link "Shopping cart"
  - listitem:
    - link "Wishlist"
- heading "Follow us" [level=3]
- list:
  - listitem:
    - link "Facebook"
  - listitem:
    - link "Twitter"
  - listitem:
    - link "RSS"
  - listitem:
    - link "YouTube"
  - listitem:
    - link "Google+"
- text: Powered by
- link "nopCommerce"
- text: Copyright Â© 2025 Tricentis Demo Web Shop. All rights reserved.
```

# Test source

```ts
   21 |         this.subscribeRadioButton = "//label[contains(text(),'Yes')"
   22 |         this.privacyPolicyCheckbox = "//label[contains(text(),'I have read and agree to the Privacy Policy')]"
   23 |         this.continueButton = "//input[@value='Continue']"
   24 |         this.successMessage = "//h1[contains(text(),'Your Account Has Been Created!')]"
   25 |
   26 |     }
   27 |
   28 |     async clickOnRegisterButton() 
   29 |     {
   30 |         await this.page.waitForSelector(this.registerButton, { state: 'visible' });
   31 |         await this.page.locator(this.registerButton).click();
   32 |         await this.page.waitForTimeout(2000);
   33 |         console.log("Register button clicked")
   34 |     }
   35 |
   36 |     async clickOnGenderMaleButton()
   37 |     {
   38 |         await this.page.locator(this.malegen).click();
   39 |         await this.page.waitForTimeout(2000);
   40 |         console.log("gender clicked")
   41 |     }
   42 |
   43 |     
   44 |     async fillFirstName(FirstName) 
   45 |     {
   46 |         await this.page.locator(this.firstNameInput).fill(FirstName);
   47 |         await this.page.waitForTimeout(2000);
   48 |         console.log("First name filled")
   49 |     }
   50 |
   51 |     async getFirstNameErrorValidation()
   52 |     {
   53 |         const errorMessage = await this.page.locator(this.firstNameError);
   54 |         //console.log("First name error messsage is: " , await errorMassage.textContent());
   55 |         console.log("First name error message is: " + errorMessage);
   56 |         return errorMessage;
   57 |     }
   58 |
   59 |     async fillLastName(Lastname) 
   60 |     {
   61 |         await this.page.locator(this.lastNameInput).fill(Lastname);
   62 |         await this.page.waitForTimeout(2000);
   63 |         console.log("Last name filled")
   64 |     }
   65 |
   66 |     async getLastNameErrorValidation()
   67 |     {
   68 |         const errorMessage = await this.page.locator(this.lastNameError);
   69 |         console.log("Last name error message is: " + errorMessage);
   70 |         return errorMessage;
   71 |     }
   72 |
   73 |
   74 |     async fillEmail(email) 
   75 |     {
   76 |         await this.page.locator(this.emailInput).fill(email);
   77 |         await this.page.waitForTimeout(2000);
   78 |         console.log("Email filled")
   79 |     }
   80 |
   81 |     async getEmailErrorValidation()
   82 |     {
   83 |         const errorMessage = await this.page.locator(this.emailError);
   84 |         console.log("Email error message is: " + errorMessage);
   85 |         return errorMessage;
   86 |     }
   87 |
   88 |     
   89 |     async fillTelephone() 
   90 |     {
   91 |         await this.page.locator(this.telephoneInput).fill("1234567890");
   92 |         await this.page.waitForTimeout(2000);
   93 |         console.log("Telephone filled")
   94 |     }
   95 |
   96 |     async fillPassword(password) 
   97 |     {
   98 |         await this.page.locator(this.passwordInput).fill(password);
   99 |         //await this.page.waitForTimeout(2000);
  100 |         console.log("Password filled")
  101 |     }
  102 |
  103 |     async getPasswordErrorValidation()
  104 |     {
  105 |         const errorMessage = await this.page.locator(this.passwordError);
  106 |         console.log("Password error message is: " + errorMessage);
  107 |         return errorMessage;
  108 |     }
  109 |
  110 |
  111 |     async fillConfirmPassword(confiPassword) 
  112 |     {
  113 |         await this.page.locator(this.confirmPasswordInput).fill(confiPassword);
  114 |         await this.page.waitForTimeout(2000);
  115 |         console.log("Confirm Password filled")
  116 |     }
  117 |
  118 |     async getConfirmPasswordErrorValidation()
  119 |     {
  120 |         const errorMessage = await this.page.locator(this.confirmPasswordError);
> 121 |         console.log("error message is : " , await errorMessage.textContent());
      |                                                                ^ Error: locator.textContent: Test timeout of 30000ms exceeded.
  122 |         console.log("Confirm Password error message is: " + errorMessage);
  123 |         return errorMessage;
  124 |     }
  125 |
  126 |     async clickOnRegButton()
  127 |     {
  128 |         await this.page.locator(this.register).click();
  129 |         console.log("Register button clicked")
  130 |     }
  131 |
  132 |
  133 |
  134 | }
```